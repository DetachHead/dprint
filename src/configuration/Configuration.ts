// Do not edit this file! It is code generated based on dprint.schema.json

/**
 * User specified configuration.
 */
export interface Configuration {
    /**
     * The width of a line the printer will try to stay under. Note that the printer may exceed this width in certain cases.
     * @default 120
     */
    lineWidth?: number;
    /**
     * The number of spaces for an indent. This option is ignored if using tabs.
     * @default 4
     */
    indentSize?: number;
    /**
     * Whether to use tabs (false) or spaces (true).
     * @default false
     */
    useTabs?: boolean;
    /**
     * Whether statements should use semi-colons.
     * @default true
     */
    semiColons?: boolean;
    /**
     * Whether to use single quotes (true) or double quotes (false).
     * @default false
     */
    singleQuotes?: boolean;
    /**
     * The style of newline.
     * @default "auto"
     */
    newLineKind?: "auto" | "crlf" | "lf" | "system";
    /**
     * Whether to force the use of braces for statements that allow them to be optional.
     * @default true
     */
    forceBraces?: boolean;
    "expressionStatement.semiColon"?: boolean;
    "ifStatement.semiColon"?: boolean;
    "importDeclaration.semiColon"?: boolean;
    "typeAlias.semiColon"?: boolean;
    "ifStatement.forceBraces"?: boolean;
}

/**
 * Resolved configuration from user specified configuration.
 */
export interface ResolvedConfiguration {
    lineWidth: number;
    indentSize: number;
    useTabs: boolean;
    singleQuotes: boolean;
    newLineKind: "auto" | "\r\n" | "\n";

    // semi colons
    "expressionStatement.semiColon": boolean;
    "ifStatement.semiColon": boolean;
    "importDeclaration.semiColon": boolean;
    "typeAlias.semiColon": boolean;

    // force braces
    "ifStatement.forceBraces": boolean;
}
